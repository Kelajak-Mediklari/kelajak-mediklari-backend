# Generated by Django 5.2.3 on 2025-09-06 09:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="courses/",
                        verbose_name="Cover",
                    ),
                ),
                (
                    "learning_outcomes",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Duration"
                    ),
                ),
                (
                    "is_unlimited",
                    models.BooleanField(default=False, verbose_name="Is Unlimited"),
                ),
                (
                    "is_main_course",
                    models.BooleanField(default=False, verbose_name="Is Main Course"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="files/", verbose_name="File"
                    ),
                ),
            ],
            options={
                "verbose_name": "File",
                "verbose_name_plural": "Files",
            },
        ),
        migrations.CreateModel(
            name="Gallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="galleries/",
                        verbose_name="Image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gallery",
                "verbose_name_plural": "Galleries",
            },
        ),
        migrations.CreateModel(
            name="MatchingQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        default="Match the items on the left with the correct items on the right.",
                        verbose_name="Instructions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Matching Question",
                "verbose_name_plural": "Matching Questions",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("question_text", models.TextField(verbose_name="Question Text")),
                ("order", models.IntegerField(default=1, verbose_name="Order")),
                ("points", models.IntegerField(default=1, verbose_name="Points")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "icon",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="subjects/",
                        verbose_name="Icon",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Subject",
                "verbose_name_plural": "Subjects",
            },
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("true_false", "True False"),
                            ("matching", "Matching"),
                            ("book_test", "Book Test"),
                            ("regular_test", "Regular Test"),
                        ],
                        max_length=255,
                        verbose_name="Type",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "test_duration",
                    models.IntegerField(
                        blank=True,
                        default=10,
                        help_text="in minutes",
                        null=True,
                        verbose_name="Test Duration",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Test",
                "verbose_name_plural": "Tests",
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="course.course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson",
                "verbose_name_plural": "Lessons",
            },
        ),
        migrations.CreateModel(
            name="MatchingPair",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("left_item", models.TextField(verbose_name="Left Item")),
                ("right_item", models.TextField(verbose_name="Right Item")),
                ("order", models.IntegerField(default=1, verbose_name="Order")),
                (
                    "matching_question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pairs",
                        to="course.matchingquestion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Matching Pair",
                "verbose_name_plural": "Matching Pairs",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="matchingquestion",
            name="question",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matching_question",
                to="course.question",
            ),
        ),
        migrations.CreateModel(
            name="BookTestQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "book_page",
                    models.IntegerField(
                        help_text="Page number in the book", verbose_name="Book Page"
                    ),
                ),
                (
                    "question_number",
                    models.IntegerField(
                        help_text="Question number on the page",
                        verbose_name="Question Number",
                    ),
                ),
                (
                    "expected_answer",
                    models.TextField(
                        blank=True,
                        help_text="Expected answer for reference (optional)",
                        null=True,
                        verbose_name="Expected Answer",
                    ),
                ),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="book_test_question",
                        to="course.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Book Test Question",
                "verbose_name_plural": "Book Test Questions",
                "ordering": ["book_page", "question_number"],
            },
        ),
        migrations.CreateModel(
            name="RegularTestQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("text_choice", "Text Choice"),
                            ("image_choice", "Image Choice"),
                            ("video_choice", "Video Choice"),
                        ],
                        default="text_choice",
                        max_length=50,
                        verbose_name="Question Type",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, null=True, verbose_name="Video URL"),
                ),
                (
                    "question_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="questions/images/",
                        verbose_name="Question Image",
                    ),
                ),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regular_test_question",
                        to="course.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regular Test Question",
                "verbose_name_plural": "Regular Test Questions",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="course.subject",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="test",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="course.test",
            ),
        ),
        migrations.CreateModel(
            name="LessonPart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("theory", "Theory"),
                            ("matching", "Matching"),
                            ("true_false", "True False"),
                            ("book_test", "Book Test"),
                            ("regular_test", "Regular Test"),
                            ("assignment", "Assignment"),
                        ],
                        max_length=255,
                        verbose_name="Type",
                    ),
                ),
                ("order", models.IntegerField(default=1, verbose_name="Order")),
                (
                    "award_coin",
                    models.IntegerField(default=0, verbose_name="Award Coin"),
                ),
                (
                    "award_point",
                    models.IntegerField(default=0, verbose_name="Award Point"),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, null=True, verbose_name="Video URL"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "attached_files",
                    models.ManyToManyField(
                        blank=True, related_name="lesson_parts", to="course.file"
                    ),
                ),
                (
                    "galleries",
                    models.ManyToManyField(
                        blank=True, related_name="lesson_parts", to="course.gallery"
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parts",
                        to="course.lesson",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lesson_parts",
                        to="course.test",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson Part",
                "verbose_name_plural": "Lesson Parts",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="TrueFalseQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("correct_answer", models.BooleanField(verbose_name="Correct Answer")),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="true_false_question",
                        to="course.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "True False Question",
                "verbose_name_plural": "True False Questions",
            },
        ),
        migrations.CreateModel(
            name="AnswerChoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "choice_text",
                    models.TextField(blank=True, null=True, verbose_name="Choice Text"),
                ),
                (
                    "choice_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="questions/choices/",
                        verbose_name="Choice Image",
                    ),
                ),
                (
                    "choice_label",
                    models.CharField(
                        help_text="A, B, C, D, etc.",
                        max_length=5,
                        verbose_name="Choice Label",
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(default=False, verbose_name="Is Correct"),
                ),
                ("order", models.IntegerField(default=1, verbose_name="Order")),
                (
                    "regular_question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="choices",
                        to="course.regulartestquestion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer Choice",
                "verbose_name_plural": "Answer Choices",
                "ordering": ["order"],
                "unique_together": {("regular_question", "choice_label")},
            },
        ),
    ]
